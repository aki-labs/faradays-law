/* eslint-disable */
import simLauncher from '../../joist/js/simLauncher.js';
import base64SoundToByteArray from '../../tambo/js/base64SoundToByteArray.js';
import WrappedAudioBuffer from '../../tambo/js/WrappedAudioBuffer.js';
import phetAudioContext from '../../tambo/js/phetAudioContext.js';

const soundURI = 'data:audio/mpeg;base64,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';
const soundByteArray = base64SoundToByteArray( phetAudioContext, soundURI );
const unlock = simLauncher.createLock( soundURI );
const wrappedAudioBuffer = new WrappedAudioBuffer();
const onDecodeSuccess = decodedAudio => {
  wrappedAudioBuffer.audioBufferProperty.set( decodedAudio );
  unlock();
};
const onDecodeError = decodeError => {
  console.warn( 'decode of audio data failed, using stubbed sound, error: ' + decodeError );
  wrappedAudioBuffer.audioBufferProperty.set( phetAudioContext.createBuffer( 1, 0, phetAudioContext.sampleRate ) );
  unlock();
};
phetAudioContext.decodeAudioData( soundByteArray.buffer, onDecodeSuccess, onDecodeError );
export default wrappedAudioBuffer;