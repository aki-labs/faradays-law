/* eslint-disable */
import simLauncher from '../../joist/js/simLauncher.js';
import base64SoundToByteArray from '../../tambo/js/base64SoundToByteArray.js';
import WrappedAudioBuffer from '../../tambo/js/WrappedAudioBuffer.js';
import phetAudioContext from '../../tambo/js/phetAudioContext.js';

const soundURI = 'data:audio/mpeg;base64,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';
const soundByteArray = base64SoundToByteArray( phetAudioContext, soundURI );
const unlock = simLauncher.createLock( soundURI );
const wrappedAudioBuffer = new WrappedAudioBuffer();
const onDecodeSuccess = decodedAudio => {
  wrappedAudioBuffer.audioBufferProperty.set( decodedAudio );
  unlock();
};
const onDecodeError = decodeError => {
  console.warn( 'decode of audio data failed, using stubbed sound, error: ' + decodeError );
  wrappedAudioBuffer.audioBufferProperty.set( phetAudioContext.createBuffer( 1, 0, phetAudioContext.sampleRate ) );
  unlock();
};
phetAudioContext.decodeAudioData( soundByteArray.buffer, onDecodeSuccess, onDecodeError );
export default wrappedAudioBuffer;