/* eslint-disable */
import simLauncher from '../../joist/js/simLauncher.js';
import base64SoundToByteArray from '../../tambo/js/base64SoundToByteArray.js';
import WrappedAudioBuffer from '../../tambo/js/WrappedAudioBuffer.js';
import phetAudioContext from '../../tambo/js/phetAudioContext.js';

const soundURI = 'data:audio/mpeg;base64,//swxAAAA/wDK6CIQBDwkaX2jDAAAkkQbbDDCHDIKFiYWGvo7C4gDH4Y7vy+j//UNWU//9YKCKUbkbaIwLDqzvv3tmOm1uJOp8/IdCy+oycLd9CSF3ZZv2lg5oLqPh5Co8hPFDjqUGg3NJTbmsLNNej/h+CDpLkEH+6jHS1oqL/36Vwa6gYNzhZgcYGyRhYdxmBShHgZ9CAYlA04//syxBWADQDtVBmqAAEQjS33sLAC3yJjvLkDADAGDwtpBPpnCcPOBYYFugUEBiUPi/NDRb4wSIDQHeRImf6afywWCfJw1Nkf+3+YgmDIoJP/mQHaQAAElb+BKmRBB7MC00DOzFXRqv7izGQySRQaFzUm+01/aobXJSOk1cbJfCVzbfzU6IuIj0sHRKsFQVaJgay3+V/0qgJtUDI5Lf/7MsQDAAgUnWWsMEnxChLqdbY0fqABcWWcSS9Uj/q4ct1HlHIQlxYM0JGtJ0QlfWC62mMpi1OkkmR6wCSj5ge1W5q7xP/pSDdWhMYsWqxgAdhAkTkbQAcoGCpyQAkyWnQ+NReJ6ZPQJj4vKmj2pJ5dW29HojJ0w+ja/rbtOLXsrZmX6lzp7IS6qWFJ+vge8yTG1QC5GRLG2kAAzEX/+zLEBQAIuGtJrTFn8ROQqnWnrFYlHE7qUNzjjM3YBMSzRVUOTQVG1q4Svdts5mZfmQUJ+7gVR237N9PR0wcKOGqotKlCtpQiQF7NqFaBV6AFLLHtda2gBLUbglM1crVo1VtCGB/ysCxDfI81c9PZzUpGwbXmAiDqNDlko2e7pS/XP/dw7QtCBlu1KXoj9ZoXrNONV0oCbbbf7bSN//swxAOACGhvWaesyPEHDyd1tiBUAQg7wZkEuylMJMsEy53vFIu5gMl06Umi3SdUlts0K/9t6M6HjH0o2KDFDzo5I4IfMARDHWU8i0WQhf96QBJI9M9K2QA9wkIn7Io8IC9QLywvfR76GXyoOmX14/Zk+vcSG2SKGO3xzE1GlOYwSBs+OCFERJQEApINe7L1XKLIItFt29usiIEE//syxASAB/y5VaeUZ/EEj+f1p4xMKEFfGE1OZhhaZJtGEHVnRQcDXtWnp3ikM5VTBonZlM1czvd8yene7K22ZBUERwWWKKkKmPX/1gWOW7/baNCConOcUs64/FW8jpHOdi7wy2Bl8UdNJF3aBUQo9SGSoiVZyiGjJxTBKceNqBJY09iCMYeWqVAf7OOqZ1Fw2921jQD4FyJSYkyEiP/7MsQIAAeEmVmnhGVw6pBntYCMrDlr67PHOdfvcij8AtQULK2RTtp/QQ7vKSGJYdAMnty0sJvNVtqWUSfb8zmlgROSXa7ZwgC6sg2HlkbqDuCvMlsUlM7r5nGiVkiBBrnWjSNjWuJMGC9CyA8kQUYHgmYUea69dFO3R64BoSSi/W2RAVVpFf5FO2i9zIRctxKej8XixRKyDVrOU2z/+zLEEIAHWHU7rAhlyOQM57UAjHzrEeEf8SvFUl5oCX7l8ufyvEmfx9nPv++V9CTlns1ukaAChdgRjpVCKsSogA1Tdpmhy6/lF4xNRjofUOti5oi0kLqKxQXAI4VadFhyJ96B7ke3piEE225JHI0BZWjN0+5NyTWm7a/WYOQz0o1VEBjwQhFIV2L8/Q/7OakYS8NclhtrS8hou2Kq//swxBqAB3C9Q6eEYpDuimXo8IxoRTHqfRo+sQBK42iiAJRZgA+zSLmVN64Iuy78mYMWZIgTATQsgHj2yChhg4tJE1KNoD5ApIuUsyEkH5KylCCeoYHEVQA1rrTaJAuy4WNRxlxDVbZLN9P6JBgS4i8tkJIXc/KOjoJxAJkjBKVWNMh1VJhpdqYvQwlTsITrdMi9qAf7gDBbRiVn//syxCIBB4B9MUwEY4DkF6XY8Ixw4SaXZrps0BavgnMR5ZihlkIiMyFslhEVnJOU/c9nRrWL/vfFKHb0IajS0zcregm9a0wxXJbJGkQhcBEzpr8nNewCYSaBckUUn5u3Y7Y2gQXl3VsC7RTJTlkkNPj+kYRsTIU/iT0JEgct1+1saDG4TvT5luVJTK3h6oFEfODCAdU9R4XAgdJDi//7MsQrgAaga0mlAGYw5wnn9LCMbAnBYqwc4Lh8itUXe5D3IM1m2peDn2b/oQ25IJdta2QBYBoMqVH/SdJ+tDPEDoW6GC++9rZENRFcRULHGnnIWOPDmtawQj22KVFEk5jqWmgFxy267WxIMVGtuW0J2/tJ+V08zBB1CHWYh2JdiiEHVwLDnQmOxOoOnEoTWxCljotBqx1HU76noSr/+zLEOAAG4Hc9ooRjoOGNZ7QgjFwEAglKSNFAAQNQCiAOgthySJsTeg1IOxyqHhZY0yzM/nD9HQghephxx8cSBAm8DNiAUfXVd3dzLn4SAKggtumjYDED0oFowzQ7N/TRNQ8P5ZESGLCnI4Sb5vbycFlm0l3iKwySFhYBPxzEItfnbia/7ACGW5L7JI0AQS2UFYUJtE7c/Q5QADew//swxEQAB0CBL6KEY8DcESd0EA2ECpb+YQqRqFPBSuGSBY4ggZOxHKsHjYTSSvTWGk3AJPIVqtsBDYAQIVdtkyoCCpFDcRahK7LBUNCYKgqGix0q46o8CuJVdQNQVHgq71u+p/f/302QSASNESKAVZFfYh8V/1/6/9f+sW//9SpMQU1FMy45OS41qqqqqqqqqqqqqqqqqqqqqqqq//syxE8AB0hnN6CEYYC9gGc8EIwEqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqv/7MsReA8LkAvmABEAwAAA0gAAABKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqo=';
const soundByteArray = base64SoundToByteArray( phetAudioContext, soundURI );
const unlock = simLauncher.createLock( soundURI );
const wrappedAudioBuffer = new WrappedAudioBuffer();
const onDecodeSuccess = decodedAudio => {
  wrappedAudioBuffer.audioBufferProperty.set( decodedAudio );
  unlock();
};
const onDecodeError = decodeError => {
  console.warn( 'decode of audio data failed, using stubbed sound, error: ' + decodeError );
  wrappedAudioBuffer.audioBufferProperty.set( phetAudioContext.createBuffer( 1, 0, phetAudioContext.sampleRate ) );
  unlock();
};
phetAudioContext.decodeAudioData( soundByteArray.buffer, onDecodeSuccess, onDecodeError );
export default wrappedAudioBuffer;